USE chirp
GO
CREATE SCHEMA vital_records
GO

IF OBJECT_ID('[vital_records].BIRTH', 'U') IS NOT NULL
	DROP TABLE [vital_records].BIRTH;
CREATE TABLE [vital_records].BIRTH (
	BIRTHID int NOT NULL,
	BIRTH2ID int,
	MEDICALID int,
	HEARINGBID int,
	EVENT_YEAR int,
	LOCAL_FILE_NUMBER VARCHAR(15),
	STATE_FILE_NUMBER VARCHAR(11),
	LOCAL_REG_NUMBER VARCHAR(15),
	USER_LOCATION VARCHAR(10),
	HOS_NUMBER VARCHAR(30),
	CASE_FILE_NUMBER VARCHAR(15),
	REG_TYPE_CODE VARCHAR(3),
	RECORD_STATUS VARCHAR(25),
	RECORD_IS_COMPLETE VARCHAR(1),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int,
	MODIFY_USER_NAME VARCHAR(51),
	CREATE_DATE DATETIME,
	NAME_FIRST VARCHAR(250),
	NAME_FIRST_NORMAL_CHAR VARCHAR(250),
	NAME_MIDDLE VARCHAR(250),
	NAME_MIDDLE_NORMAL_CHAR VARCHAR(250),
	NAME_LAST VARCHAR(250),
	NAME_LAST_SOUNDEX VARCHAR(10),
	NAME_LAST_NORMAL_CHAR VARCHAR(250),
	NAME_SUFFIX VARCHAR(4),
	DATE_OF_BIRTH DATETIME,
	TIME_OF_BIRTH VARCHAR(4),
	SEX VARCHAR(1),
	SSN_CHILD VARCHAR(9),
	PLURALITY VARCHAR(2),
	BIRTH_ORDER VARCHAR(2),
	FACID int,
	FAC_NAME VARCHAR(50),
	FAC_TYPE_CODE int,
	FAC_TYPE_NAME VARCHAR(35),
	FAC_CITY_FIPS VARCHAR(5),
	FAC_NUMBER VARCHAR(10),
	FAC_COUNTRY_NAME VARCHAR(40),
	FAC_COUNTY_NAME VARCHAR(40),
	FAC_CITY_NAME VARCHAR(40),
	FAC_ZIPCODE VARCHAR(9),
	FAC_CNTY_FIPS VARCHAR(3),
	FAC_STATE VARCHAR(50),
	FAC_NPI VARCHAR(20),
	FAC_STATEID int,
	FAC_STATE_NAME_ABBR VARCHAR(25),
	INFANT_DECEASED VARCHAR(1),
	DEATH_MATCHED VARCHAR(1),
	DEATH_STATE_FILE_NUMBER VARCHAR(15),
	DEATH_OOS_SFN VARCHAR(20),
	DEATH_STATE VARCHAR(25),
	DEATH_DATE DATETIME,
	DEATH_AGE VARCHAR(3),
	DEATH_AGE_UNITS VARCHAR(10),
	MOTHER_NAME_FIRST VARCHAR(250),
	MOTHER_NAME_MIDDLE VARCHAR(250),
	MOTHER_NAME_LAST VARCHAR(250),
	MOTHER_NAME_SUFFIX VARCHAR(6),
	MOTHER_NAME_FIRST_P VARCHAR(250),
	MOTHER_NAME_MIDDLE_P VARCHAR(250),
	MOTHER_NAME_LAST_P VARCHAR(250),
	MOTHER_NAME_SUFFIX_P VARCHAR(6),
	MOTHER_BIRTH_COUNTRY VARCHAR(50),
	MOTHER_BIRTH_COUNTRYID int,
	MOTHER_BIRTH_STATEID int,
	MOTHER_BIRTH_STATE VARCHAR(25),
	MOTHER_SSN VARCHAR(9),
	MOTHER_RES_ADDR1 VARCHAR(40),
	MOTHER_RES_APT VARCHAR(10),
	MOTHER_RES_COUNTRY VARCHAR(50),
	MOTHER_RES_COUNTRYID int,
	MOTHER_RES_STATE VARCHAR(25),
	MOTHER_RES_STATEID int,
	MOTHER_RES_COUNTY VARCHAR(40),
	MOTHER_RES_CNTY_FIPS VARCHAR(3),
	MOTHER_RES_MUN VARCHAR(40),
	MOTHER_RES_CITY_FIPS VARCHAR(5),
	MOTHER_RES_ZIPCODEID int,
	MOTHER_RES_ZIP VARCHAR(9),
	MOTHER_RES_NCHS_GEO VARCHAR(5),
	MOTHER_RES_INCITY VARCHAR(1),
	MOTHER_MAIL_SAME_AS_RES VARCHAR(1),
	MOTHER_MAIL_ADDR1 VARCHAR(40),
	MOTHER_MAIL_ADDR2 VARCHAR(50),
	MOTHER_MAIL_APT VARCHAR(10),
	MOTHER_MAIL_COUNTRY VARCHAR(50),
	MOTHER_MAIL_COUNTRYID int,
	MOTHER_BIRTH_COUNTRY_FIPS VARCHAR(2),
	MOTHER_MAIL_STATEID int,
	MOTHER_MAIL_STATE VARCHAR(25),
	MOTHER_MAIL_CITY VARCHAR(40),
	MOTHER_MAIL_ZIP VARCHAR(9),
	MOTHER_MAIL_ZIPCODEID int,
	MOTHER_PHONE VARCHAR(10),
	MOTHER_PHONE_EXT VARCHAR(7),
	FATHER_NAME_FIRST VARCHAR(250),
	FATHER_NAME_MIDDLE VARCHAR(250),
	FATHER_NAME_LAST VARCHAR(250),
	FATHER_NAME_SUFFIX VARCHAR(4),
	FATHER_BIRTH_COUNTRY VARCHAR(50),
	FATHER_BIRTH_COUNTRYID int,
	FATHER_BIRTH_COUNTRY_FIPS VARCHAR(2),
	FATHER_BIRTH_STATEID int,
	FATHER_BIRTH_STATE VARCHAR(25),
	FATHER_RES_SAME_MOTHER VARCHAR(1),
	FATHER_RES_ADDR1 VARCHAR(40),
	FATHER_RES_APT VARCHAR(10),
	FATHER_RES_COUNTRY VARCHAR(50),
	FATHER_RES_COUNTRYID int,
	FATHER_RES_STATEID int,
	FATHER_RES_STATE VARCHAR(25),
	FATHER_RES_COUNTY VARCHAR(40),
	FATHER_RES_MUN VARCHAR(40),
	FATHER_RES_ZIP VARCHAR(9),
	FATHER_RES_ZIPCODEID int,
	FATHER_RES_INCITY VARCHAR(1),
	FATHER_MAIL_SAME_AS_RES VARCHAR(1),
	FATHER_MAIL_ADDR1 VARCHAR(40),
	FATHER_MAIL_APT VARCHAR(10),
	FATHER_MAIL_COUNTRY VARCHAR(50),
	FATHER_MAIL_COUNTRYID int,
	FATHER_MAIL_STATEID int,
	FATHER_MAIL_STATE VARCHAR(25),
	FATHER_MAIL_COUNTY VARCHAR(50),
	FATHER_MAIL_CITY VARCHAR(40),
	FATHER_MAIL_ZIP VARCHAR(9),
	FATHER_MAIL_ZIPCODEID int,
	FATHER_SSN VARCHAR(9),
	FATHER_PHONE VARCHAR(10),
	MOTHER_OCCUPATION VARCHAR(50),
	MOTHER_OCCUPATION_CD VARCHAR(3),
	MOTHER_INDUSTRY VARCHAR(50),
	MOTHER_INDUSTRY_CD VARCHAR(3),
	FATHER_OCCUPATION VARCHAR(50),
	FATHER_OCCUPATION_CD VARCHAR(3),
	FATHER_INDUSTRY VARCHAR(50),
	FATHER_INDUSTRY_CD VARCHAR(3),
	LIVE_BIRTHS_LIVING VARCHAR(2),
	LIVE_BIRTHS_DEAD VARCHAR(2),
	LIVE_BIRTHS_DATE_MMYYYY VARCHAR(6),
	TERM_NUMBER VARCHAR(2),
	TERM_DATE_MMYYYY VARCHAR(6),
	MOTHER_MARRIED VARCHAR(1),
	FATHER_IS_HUSBAND VARCHAR(1),
	FATHER_AND_HUSBAND_SIGN VARCHAR(1),
	FATHER_SIGN_PAT_AFFIDAVIT VARCHAR(1),
	MENSES_DATE DATETIME,
	GESTATION_WEEKS int,
	BIRTH_WEIGHT_GRAMS int,
	BIRTH_WEIGHT_OZ int,
	BIRTH_WEIGHT_LBS int,
	BIRTH_WEIGHT_UNIT VARCHAR(1),
	APGAR_10 VARCHAR(2),
	APGAR_5 VARCHAR(2),
	TRANS_INFANT VARCHAR(1),
	TRANS_INFANT_FAC VARCHAR(50),
	TRANS_INFANT_FACID int,
	REGISTRAR_NAME_LFM VARCHAR(50),
	REGISTRARID int,
	REGISTRAR_REGIS_DATE DATETIME,
	REGISTRAR_SIGN VARCHAR(1),
	REGISTRAR_SIG int,
	INFORMANT_NAME_FIRST VARCHAR(250),
	INFORMANT_NAME_MIDDLE VARCHAR(250),
	INFORMANT_NAME_LAST VARCHAR(250),
	INFORMANT_NAME_SUFFIX VARCHAR(6),
	INFORMANT_RELATIONSHIP VARCHAR(50),
	INFORMANT_ADDR1 VARCHAR(100),
	INFORMANT_ADDR2 VARCHAR(100),
	INFORMANT_CITY VARCHAR(50),
	INFORMANT_STATE VARCHAR(20),
	INFORMANT_ZIP VARCHAR(5),
	INFORMANT_PHONE VARCHAR(14),
	ATTENDANT_NAME_LFM VARCHAR(100),
	ATTENDANTID int,
	ATTENDANTTITLEID int,
	ATTENDANT_TITLE VARCHAR(35),
	ATTENDANT_TITLE_CODE VARCHAR(2),
	ATTENDANT_ADDR1 VARCHAR(100),
	ATTENDANT_STATE VARCHAR(35),
	ATTENDANT_ZIPCODE VARCHAR(5),
	CERTIFIERID int,
	CERTIFIER_NAME_LFM VARCHAR(100),
	CERTIFIER_DATE_COMP DATETIME,
	CERTIFIERTITLEID int,
	CERTIFIER_TITLE VARCHAR(35),
	CERTIFIER_ADDR1 VARCHAR(100),
	CERTIFIER_STATE VARCHAR(35),
	CERTIFIER_ZIPCODE VARCHAR(5),
	CERTIFIER_SIGN VARCHAR(1),
	CERTIFIER_SIG int,
	STOP_FLAG VARCHAR(1),
	STOP_DATE DATETIME,
	OK_TO_PRINT VARCHAR(1),
	OK_TO_COMMENT VARCHAR(250),
	DATE_LAST_CCC DATETIME,
	SSN_REQUESTED VARCHAR(1),
	NCHS_READY VARCHAR(1),
	NCHS_DATE_SENT DATETIME,
	SSA_DATE_SENT DATETIME,
	ALERT_COUNT int,
	PRINT_NUMBER int,
	OOS_YEAR VARCHAR(4),
	OOS_B_NUM VARCHAR(15),
	DEATH_OCCURRED VARCHAR(1),
	HOSPITAL_PATERNITY_FLAG VARCHAR(1),
	COURT_INFO VARCHAR(50),
	RECORD_RIGHT VARCHAR(1),
	ACTION_FLAG_COMMENTS VARCHAR(250),
	QUALIFYING_INFO VARCHAR(250),
	RECORD_IS_COMPLETE_DATE DATETIME,
	MENSES_DATE_STRING VARCHAR(10),
	BIRTH_WEIGHT_GRAMS_BYPASS VARCHAR(1),
	GESTATION_WEEKS_BYPASS VARCHAR(1),
	PLURALITY_BYPASS VARCHAR(1),
	MOTHER_MAIL_COUNTY VARCHAR(50),
	PATERNITY_SIGN_DATE DATETIME,
	ATTENDANT_CITY VARCHAR(50),
	ATTENDANT_COUNTY VARCHAR(50),
	CERTIFIER_CITY VARCHAR(50),
	CERTIFIER_COUNTY VARCHAR(50),
	SSA_VERIFIED_DATE DATETIME,
	SSA_READY VARCHAR(1),
	NAME_FULL_L_SUF_F_M VARCHAR(100),
	APGAR_1 VARCHAR(2),
	VOID_FLAG VARCHAR(1),
	FAC_NV_CODE VARCHAR(10),
	LIVE_BIRTHS_TOTAL VARCHAR(2),
	MOTHER_RES_COUNTRY_FIPS VARCHAR(2),
	FAC_COUNTRY_FIPS VARCHAR(2),
	EVENT_NAME VARCHAR(20),
	CERTIFIER_DATE_COMP_STR VARCHAR(10),
	REGISTRAR_REGIS_DATE_STR VARCHAR(10),
	DATE_OF_BIRTH_STR VARCHAR(10),
	MOTHER_RES_ST_ALPHA_FIPS VARCHAR(2),
	MOTHER_RES_ST_FIPS VARCHAR(2),
	ERRORS_PENDING VARCHAR(1),
	IJE_SENT VARCHAR(1),
	IJE_SENT_DATE DATETIME,
	IJE_IMPORT VARCHAR(1),
	IJE_IMPORT_DATE DATETIME,
	FAC_CNTY_NV_OLD VARCHAR(2),
	FAC_CITY_NV_OLD VARCHAR(3),
	FAC_CITY_NAME_FOREIGN VARCHAR(40),
	FAC_ST_NV_OLD VARCHAR(2),
	MOTHER_RES_CITY_NV_OLD VARCHAR(3),
	MOTHER_RES_CNTY_NV_OLD VARCHAR(3),
	MOTHER_MAIL_CITY_NV_OLD VARCHAR(3),
	MOTHER_MAIL_CNTY_NV_OLD VARCHAR(2),
	REGISTRAR_SIGN_BY VARCHAR(30),
	REG_SIGN_CNTY VARCHAR(1)
);
GO


IF OBJECT_ID('[vital_records].BIRTH2', 'U') IS NOT NULL
	DROP TABLE [vital_records].BIRTH2;
CREATE TABLE [vital_records].BIRTH2 (
	BIRTH2ID int NOT NULL,
	ISACTIVE VARCHAR(1),
	EVENT_YEAR int,
	MOTHER_ETHNIC_YESNO VARCHAR(1),
	MOTHER_MEXICAN VARCHAR(1),
	MOTHER_PR VARCHAR(1),
	MOTHER_CUBAN VARCHAR(1),
	MOTHER_ETHNIC_OTHER VARCHAR(1),
	MOTHER_ETHNIC VARCHAR(50),
	MOTHER_RACE_WHITE VARCHAR(1),
	MOTHER_RACE_BLACK VARCHAR(1),
	MOTHER_RACE_AM_INDIAN VARCHAR(1),
	MOTHER_RACE_AM_IND_LIT VARCHAR(50),
	MOTHER_RACE_AM_IND_LIT2 VARCHAR(50),
	MOTHER_RACE_CHINESE VARCHAR(1),
	MOTHER_RACE_FILIPINO VARCHAR(1),
	MOTHER_RACE_JAPANESE VARCHAR(1),
	MOTHER_RACE_KOREAN VARCHAR(1),
	MOTHER_RACE_VIETNAMESE VARCHAR(1),
	MOTHER_RACE_ASIAN_IND VARCHAR(1),
	MOTHER_RACE_ASIAN_OTH VARCHAR(1),
	MOTHER_RACE_ASIAN_LIT VARCHAR(50),
	MOTHER_RACE_ASIAN_LIT2 VARCHAR(50),
	MOTHER_RACE_HAWAIIAN VARCHAR(1),
	MOTHER_RACE_GUAM VARCHAR(1),
	MOTHER_RACE_SAMOAN VARCHAR(1),
	MOTHER_RACE_PAC_OTHER VARCHAR(1),
	MOTHER_RACE_PAC_LIT VARCHAR(50),
	MOTHER_RACE_PAC_LIT2 VARCHAR(50),
	MOTHER_RACE_OTHER VARCHAR(1),
	MOTHER_RACE_OTHER_LIT VARCHAR(50),
	MOTHER_RACE_OTHER_LIT2 VARCHAR(50),
	MOTHER_RACE_NOT_OBTAIN VARCHAR(1),
	MOTHER_RACE_REFUSED VARCHAR(1),
	MOTHER_RACE_UNKNOWN_MVR VARCHAR(1),
	MOTHER_RACE_UNKNOWN VARCHAR(1),
	MOTHER_RACE_LEGACY VARCHAR(100),
	TOBACCO_USE VARCHAR(1),
	MOTHER_CIG_PREV VARCHAR(2),
	MOTHER_CIG_PREV_PACK VARCHAR(2),
	MOTHER_CIG_FIRST_TRI VARCHAR(2),
	MOTHER_CIG_FIRST_PACK VARCHAR(2),
	MOTHER_CIG_SECOND_TRI VARCHAR(2),
	MOTHER_CIG_SECOND_PACK VARCHAR(2),
	MOTHER_CIG_LAST_TRI VARCHAR(2),
	MOTHER_CIG_LAST_PACK VARCHAR(2),
	MOTHER_CIG_OR_PACK VARCHAR(1),
	MOTHER_WIC_YESNO VARCHAR(1),
	MOTHER_WT_AT_DELIV VARCHAR(3),
	MOTHER_WT_AT_DELIV_BYPASS VARCHAR(1),
	MOTHER_HEIGHT_FEET VARCHAR(1),
	MOTHER_HEIGHT_INCH VARCHAR(2),
	MOTHER_HEIGHT_FEET_BYPASS VARCHAR(1),
	MOTHER_PRE_PREG_WT VARCHAR(3),
	MOTHER_PRE_PREG_WT_BYPASS VARCHAR(1),
	MOTHER_DOB DATETIME,
	MOTHER_DOB_STRING VARCHAR(10),
	MOTHER_DOB_STRING_BYPASS VARCHAR(1),
	MOTHER_AGE VARCHAR(3),
	FATHER_DOB DATETIME,
	FATHER_DOB_STRING VARCHAR(10),
	FATHER_DOB_STRING_BYPASS VARCHAR(1),
	FATHER_AGE VARCHAR(3),
	MOTHER_EVER_MARRIED VARCHAR(1),
	FATHER_ETHNIC_YESNO VARCHAR(1),
	FATHER_MEXICAN VARCHAR(1),
	FATHER_PR VARCHAR(1),
	FATHER_CUBAN VARCHAR(1),
	FATHER_ETHNIC_OTHER VARCHAR(1),
	FATHER_ETHNIC VARCHAR(25),
	FATHER_RACE_WHITE VARCHAR(1),
	FATHER_RACE_BLACK VARCHAR(1),
	FATHER_RACE_AM_INDIAN VARCHAR(1),
	FATHER_RACE_AM_IND_LIT VARCHAR(50),
	FATHER_RACE_AM_IND_LIT2 VARCHAR(50),
	FATHER_RACE_ASIAN VARCHAR(1),
	FATHER_RACE_CHINESE VARCHAR(1),
	FATHER_RACE_FILIPINO VARCHAR(1),
	FATHER_RACE_JAPANESE VARCHAR(1),
	FATHER_RACE_KOREAN VARCHAR(1),
	FATHER_RACE_VIETNAMESE VARCHAR(1),
	FATHER_RACE_ASIAN_OTH VARCHAR(1),
	FATHER_RACE_ASIAN_LIT VARCHAR(50),
	FATHER_RACE_ASIAN_LIT2 VARCHAR(50),
	FATHER_RACE_HAWAIIAN VARCHAR(1),
	FATHER_RACE_GUAM VARCHAR(1),
	FATHER_RACE_SAMOAN VARCHAR(1),
	FATHER_RACE_PAC VARCHAR(1),
	FATHER_RACE_PAC_LIT VARCHAR(50),
	FATHER_RACE_PAC_LIT2 VARCHAR(50),
	FATHER_RACE_OTHER VARCHAR(1),
	FATHER_RACE_OTHER_LIT VARCHAR(50),
	FATHER_RACE_OTHER_LIT2 VARCHAR(50),
	FATHER_RACE_NOT_OBTAIN VARCHAR(1),
	FATHER_RACE_REFUSED VARCHAR(1),
	FATHER_RACE_UNKNOWN_MVR VARCHAR(1),
	FATHER_RACE_UNKNOWN VARCHAR(1),
	FATHER_RACE_LEGACY VARCHAR(100),
	FATHER_ED VARCHAR(50),
	FATHER_EDCODE VARCHAR(1),
	FATHER_ED_BYPASS VARCHAR(1),
	MOTHER_EDCODE VARCHAR(1),
	MOTHER_ED_BYPASS VARCHAR(1),
	PRENATAL_YESNO VARCHAR(1),
	PRENATAL_DATE_BEGIN DATETIME,
	PRENATAL_DATE_BEG_STRING VARCHAR(10),
	PRENATAL_DATE_END DATETIME,
	PRENATAL_DATE_END_STRING VARCHAR(10),
	PRENAT_TOT_VISITS VARCHAR(2),
	PRENAT_TOT_VISITS_BYPASS VARCHAR(2),
	TRANS_MOTHER VARCHAR(1),
	TRANS_MOTHER_FAC VARCHAR(50),
	TRANS_MOTHER_FACID int,
	TRANS_DATE_STRING VARCHAR(30),
	BIRROUTE_DESC VARCHAR(50),
	BIRROUTE_CODE VARCHAR(1),
	BIRPRESENT_DESC VARCHAR(50),
	BIRPRESENT_CODE VARCHAR(1),
	BIRTH_NUMBER VARCHAR(2),
	INFANT_LIVING VARCHAR(1),
	MOTHER_ED VARCHAR(50),
	MATCH_NUMBER int,
	BORN_ALIVE VARCHAR(2),
	SOURCE_PAYMENT VARCHAR(50),
	SOURCE_PAY_CODE VARCHAR(1),
	NOTES VARCHAR(250),
	MAIL_EXCLUSION VARCHAR(1),
	FRACE1E VARCHAR(25),
	FRACE2E VARCHAR(25),
	FRACE3E VARCHAR(25),
	FRACE4E VARCHAR(25),
	FRACE5E VARCHAR(25),
	FRACE6E VARCHAR(25),
	FRACE7E VARCHAR(25),
	FRACE8E VARCHAR(25),
	FRACE16E VARCHAR(25),
	FRACE18E VARCHAR(25),
	FRACE20E VARCHAR(25),
	FRACE22E VARCHAR(25),
	MRACE1E VARCHAR(25),
	MRACE2E VARCHAR(25),
	MRACE3E VARCHAR(25),
	MRACE4E VARCHAR(25),
	MRACE5E VARCHAR(25),
	MRACE6E VARCHAR(25),
	MRACE7E VARCHAR(25),
	MRACE8E VARCHAR(25),
	MRACE16E VARCHAR(25),
	MRACE18E VARCHAR(25),
	MRACE20E VARCHAR(25),
	MRACE22E VARCHAR(25),
	IMMUN_VACC_LITERAL VARCHAR(30),
	IMMUN_VACC_DATE DATETIME,
	IMMUN_VACC_TIME VARCHAR(4),
	IMMUN_VACC_MANUF VARCHAR(20),
	IMMUN_VACC_LOT VARCHAR(15),
	IMMUN_VACC_SITE VARCHAR(25),
	IMMUN_VACC_LITERAL_2 VARCHAR(35),
	IMMUN_VACC_DATE_2 DATETIME,
	IMMUN_VACC_TIME_2 VARCHAR(4),
	IMMUN_VACC_MANUF_2 VARCHAR(20),
	IMMUN_VACC_LOT_2 VARCHAR(15),
	IMMUN_VACC_SITE_2 VARCHAR(25),
	IMMUN_REFUSED VARCHAR(1),
	IMMUNIZ_SENT VARCHAR(1),
	IMMUNIZ_DATE DATETIME,
	IMMUN_PROVIDER_NAME VARCHAR(50),
	ADOPT_COUNTY VARCHAR(50),
	ADOPT_STATE VARCHAR(25),
	ADOPT_DATE_FILED DATETIME,
	ADOPT_ATTORNEY_NAME VARCHAR(50),
	ADOPT_ATT_ADDR VARCHAR(75),
	ADOPT_ATT_CSZ VARCHAR(50),
	ADOPT_STEP_PARENT VARCHAR(1),
	ADOPT_ADULT VARCHAR(1),
	DELAY_DOC_1 VARCHAR(80),
	DELAY_DOC_2 VARCHAR(80),
	DELAY_DOC_3 VARCHAR(80),
	DELAY_DOC_4 VARCHAR(80),
	DELAY_VER_DATE_1 VARCHAR(20),
	DELAY_VER_DATE_2 VARCHAR(20),
	DELAY_VER_DATE_3 VARCHAR(20),
	DELAY_VER_DATE_4 VARCHAR(20),
	RECORD_STATUS_PERS_MED VARCHAR(50),
	PATERNITY_STATUS VARCHAR(50),
	SEALED_ENVELOPE_NO VARCHAR(10),
	TIME_OF_BIRTH_12HR VARCHAR(30),
	HOSP_PATERNITY_COMPLETE VARCHAR(1),
	LANGUAGE_FOREIGN VARCHAR(30),
	MOTHER_ED_LEGACY VARCHAR(2),
	FATHER_ED_LEGACY VARCHAR(2),
	PRENATAL_BEGIN_MONTH VARCHAR(1),
	PRENATAL_BEGIN_CALENDAR VARCHAR(2),
	PRENATAL_VISITS_1ST_TRI VARCHAR(2),
	PRENATAL_VISITS_2ND_TRI VARCHAR(2),
	PRENATAL_VISITS_3RD_TRI VARCHAR(2),
	MARITAL_STATUS VARCHAR(15),
	FATHER_SURNAME_CODE VARCHAR(1),
	REJECT_YN VARCHAR(1),
	REJECT_TO VARCHAR(50),
	REJECT_FROM VARCHAR(50),
	REJECT_DATE DATETIME,
	REJECT_REASON VARCHAR(50),
	REJECT_USERNAME VARCHAR(50),
	REJECT_RESOLUTION VARCHAR(50),
	REJECT_RESOLVE_DATE DATETIME,
	REJECT_RESOLVE_USERNAME VARCHAR(50),
	REJECT_YN1 VARCHAR(1),
	REJECT_TO1 VARCHAR(50),
	REJECT_FROM1 VARCHAR(50),
	REJECT_DATE1 DATETIME,
	REJECT_REASON1 VARCHAR(50),
	REJECT_USERNAME1 VARCHAR(50),
	REJECT_RESOLUTION1 VARCHAR(50),
	REJECT_RESOLVE_DATE1 DATETIME,
	REJECT_RESOLVE_USERNAME1 VARCHAR(50),
	PATERNITY_RECVD VARCHAR(1),
	IMMUN_VACC_LOT_EXP DATETIME,
	IMMUN_VACC_LOT_EXP_2 DATETIME,
	MOTHER_SURROGATE VARCHAR(1),
	NCHS_MO_ETHNIC_CD VARCHAR(3),
	NCHS_MO_ETHNIC_LIT_CD VARCHAR(3),
	NCHS_FA_ETHNIC_CD VARCHAR(3),
	NCHS_FA_ETHNIC_LIT_CD VARCHAR(3),
	MO_BRIDGED_RACE VARCHAR(2),
	FA_BRIDGED_RACE VARCHAR(2),
	DELAY_RACE VARCHAR(50),
	MOTHER_BIRTH_CNTRY_NV VARCHAR(2),
	MOTHER_STATE_CODE_NV VARCHAR(2),
	FATHER_STATE_CODE_NV VARCHAR(2),
	FATHER_BIRTH_CNTRY_NV VARCHAR(2),
	DELAY_BIRTHPLACE_1 VARCHAR(25),
	DELAY_BIRTHPLACE_2 VARCHAR(25),
	DELAY_BIRTHPLACE_3 VARCHAR(25),
	DELAY_BIRTHPLACE_4 VARCHAR(25),
	DELAY_MOTHER_NAME_1 VARCHAR(50),
	DELAY_MOTHER_NAME_2 VARCHAR(50),
	DELAY_MOTHER_NAME_3 VARCHAR(50),
	DELAY_MOTHER_NAME_4 VARCHAR(50),
	DELAY_FATHER_NAME_1 VARCHAR(50),
	DELAY_FATHER_NAME_2 VARCHAR(50),
	DELAY_FATHER_NAME_3 VARCHAR(50),
	DELAY_FATHER_NAME_4 VARCHAR(50),
	DELAY_ORIG_INFO_1 VARCHAR(15),
	DELAY_ORIG_INFO_2 VARCHAR(15),
	DELAY_ORIG_INFO_3 VARCHAR(15),
	DELAY_ORIG_INFO_4 VARCHAR(15),
	DELAY_DOB_INFO_1 VARCHAR(20),
	DELAY_DOB_INFO_2 VARCHAR(20),
	DELAY_DOB_INFO_3 VARCHAR(20),
	DELAY_DOB_INFO_4 VARCHAR(20),
	DELAY_RACE_1 VARCHAR(20),
	DELAY_RACE_2 VARCHAR(20),
	DELAY_RACE_3 VARCHAR(20),
	DELAY_RACE_4 VARCHAR(20),
	IMMUN_REFUSED_2 VARCHAR(1),
	IMMUNIZ_SENT_2 VARCHAR(1),
	IMMUNIZ_DATE_2 DATETIME,
	IMMUN_PROVIDER_NAME_2 VARCHAR(50),
	HINFO_KEY VARCHAR(1)
);
GO


IF OBJECT_ID('[vital_records].DEATH', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH;
CREATE TABLE [vital_records].DEATH (
	DEATHID int NOT NULL,
	EVENT_YEAR int,
	STATE_FILE_NUMBER VARCHAR(11),
	LOCAL_FILE_NUMBER VARCHAR(15),
	RECORD_STATUS VARCHAR(30),
	REG_TYPE_CODE VARCHAR(1),
	LOCAL_REG_NUMBER VARCHAR(15),
	PERMIT_NUMBER VARCHAR(15),
	CREATE_DATE DATETIME,
	CREATE_USERNAME VARCHAR(51),
	CREATE_USERID int,
	DEATH_STATE VARCHAR(2),
	VOID_FLAG VARCHAR(1),
	NAME_FIRST VARCHAR(50),
	NAME_MIDDLE VARCHAR(30),
	NAME_LAST VARCHAR(50),
	NAME_SUFFIX VARCHAR(10),
	NAME_FIRST_NORMAL_CHAR VARCHAR(50),
	NAME_MIDDLE_NORMAL_CHAR VARCHAR(50),
	NAME_LAST_NORMAL_CHAR VARCHAR(50),
	NAME_LAST_SOUNDEX VARCHAR(4),
	SAVE_NO_EDIT_FLAG VARCHAR(1),
	FATHER_NAME_FIRST VARCHAR(50),
	FATHER_NAME_MIDDLE VARCHAR(50),
	FATHER_NAME_LAST VARCHAR(50),
	FATHER_NAME_SUFFIX VARCHAR(10),
	SEX VARCHAR(1),
	SEX_BYPASS VARCHAR(1),
	SSN VARCHAR(9),
	AGE_TYPE VARCHAR(15),
	AGE_TYPE_CODE VARCHAR(1),
	AGE VARCHAR(3),
	AGE_BYPASS VARCHAR(1),
	DATE_OF_BIRTH DATETIME,
	DOB_STRING VARCHAR(10),
	BIRTH_COUNTRY VARCHAR(50),
	BIRTH_STATE VARCHAR(50),
	CITIZENSHIP VARCHAR(50),
	CITIZEN_CNTRY_NCHS VARCHAR(50),
	CITIZEN_CNTRY_NV VARCHAR(50),
	RESID_ADDRESS VARCHAR(50),
	RESID_APT_NO VARCHAR(10),
	RESID_CITY VARCHAR(50),
	RESID_CITY_NCHS VARCHAR(5),
	RESID_COUNTY VARCHAR(50),
	RESID_COUNTY_NCHS VARCHAR(3),
	RESID_STATE VARCHAR(50),
	RESID_STATE_NCHS VARCHAR(2),
	RESID_COUNTRY VARCHAR(50),
	RESID_COUNTRY_NCHS VARCHAR(2),
	RESID_IN_CITY VARCHAR(1),
	RESID_ZIP VARCHAR(9),
	MARITAL VARCHAR(25),
	MARITAL_BYPASS VARCHAR(1),
	PLACE_DEATH VARCHAR(40),
	FAC_NAME VARCHAR(200),
	FAC_CITY VARCHAR(50),
	FAC_COUNTY VARCHAR(50),
	FAC_COUNTY_CODE VARCHAR(5),
	FAC_CNTY_NCHS VARCHAR(4),
	FAC_ADDRESS VARCHAR(50),
	FAC_STATE VARCHAR(50),
	FAC_ZIP VARCHAR(9),
	FACID int,
	DISPOSITION VARCHAR(30),
	DATE_OF_DEATH DATETIME,
	DOD_STRING VARCHAR(10),
	DOD_SIGNED_DATE DATETIME,
	TIME_OF_DEATH VARCHAR(12),
	TIME_OF_DEATH_INDIC VARCHAR(10),
	TOD_MILITARY VARCHAR(5),
	OLD_EDUCATION VARCHAR(5),
	EDUCATION VARCHAR(50),
	EDUCATION_BYPASS VARCHAR(1),
	EDUCATION_CODE VARCHAR(1),
	RACE VARCHAR(50),
	RACE_NV_CODE VARCHAR(1),
	ANCESTORY VARCHAR(50),
	ANCESTORY_NV_CODE VARCHAR(2),
	OCCUPAT_LIT VARCHAR(50),
	OCCUPAT_CODE VARCHAR(3),
	INDUSTRY_LIT VARCHAR(50),
	INDUSTRY_CODE VARCHAR(3),
	BIRTH_STATEID int,
	BIRTH_SFN VARCHAR(11),
	BIRTH_YEAR VARCHAR(4),
	BIRTH_CITY VARCHAR(50),
	BIRTH_OOS_SFN_NV VARCHAR(10),
	SPOUSE_NAME_F VARCHAR(50),
	SPOUSE_NAME_M VARCHAR(50),
	SPOUSE_NAME_L VARCHAR(50),
	SPOUSE_NAME_SUF VARCHAR(10),
	MOTHER_NAME_F VARCHAR(50),
	MOTHER_NAME_M VARCHAR(50),
	MOTHER_NAME_L VARCHAR(50),
	MOTHER_NAME_SUF VARCHAR(10),
	INFORMANT_NAME_F VARCHAR(50),
	INFORMANT_NAME_M VARCHAR(50),
	INFORMANT_NAME_L VARCHAR(50),
	INFORMANT_NAME_SUF VARCHAR(10),
	INFORMANT_RELATION VARCHAR(50),
	INFORMANT_ADDRESS VARCHAR(50),
	INFORMANT_CITY VARCHAR(50),
	INFORMANT_STATE VARCHAR(50),
	INFORMANT_ZIP VARCHAR(9),
	INFORMANT_PHONE VARCHAR(12),
	DISPOS_NAME VARCHAR(50),
	FUNER_NAME VARCHAR(200),
	FUNER_ADDRESS VARCHAR(50),
	FUNER_CITY VARCHAR(50),
	FUNER_STATE VARCHAR(50),
	FUNER_ZIP VARCHAR(9),
	FUNER_LICENSE VARCHAR(20),
	FUNER_SIGN VARCHAR(1),
	FUNER_SIGN_DATE DATETIME,
	DATE_PRONOUNCED DATETIME,
	DATEX_PRON_STRING VARCHAR(10),
	TIME_PRONOUNCED VARCHAR(12),
	TIME_PRONOUNCE_INDIC VARCHAR(10),
	TOD_PRON_MILITARY VARCHAR(5),
	DATE_PRO_SIG DATETIME,
	CERT_SIGN_DATE DATETIME,
	CERT_NAME_FML VARCHAR(150),
	CERT_TITLE VARCHAR(50),
	CERTID int,
	CERT_LICENSE VARCHAR(15),
	CERT_DATE DATETIME,
	CERT_ADDR VARCHAR(50),
	CERT_CITY VARCHAR(50),
	CERT_STATE VARCHAR(50),
	CERT_ZIP VARCHAR(9),
	DATE_FILED DATETIME,
	CORONER_CONTACTED VARCHAR(1),
	CORONER_CONT_REASON VARCHAR(50),
	IMMED_CAUSE_DEATH VARCHAR(120),
	CAUSE_INTERVAL VARCHAR(20),
	CAUSE_UNITS VARCHAR(10),
	CONSQ1 VARCHAR(120),
	CONSQ1_INTERVAL VARCHAR(20),
	CONSQ1_UNITS VARCHAR(10),
	CONSQ2 VARCHAR(120),
	CONSQ2_INTERVAL VARCHAR(20),
	CONSQ2_UNITS VARCHAR(10),
	CONSQ3 VARCHAR(120),
	CONSQ3_INTERVAL VARCHAR(20),
	CONSQ3_UNITS VARCHAR(10),
	OTH_SIGNF_CONDS VARCHAR(240),
	COMMUN_DISEASE_YN VARCHAR(1),
	AUTOPSY_DONE VARCHAR(1),
	FINDINGS_USED VARCHAR(1),
	FEM_PREG VARCHAR(60),
	MANNER_DEATH VARCHAR(60),
	MANNER_DEATHID int,
	TOBACCO_YN VARCHAR(1),
	INJURY_DATE DATETIME,
	INJURY_TIME VARCHAR(20),
	INJURY_TIME_INDIC VARCHAR(10),
	INJURY_TIME_MIL VARCHAR(5),
	INJURY_PLACE VARCHAR(100),
	INJURY_LOCAT VARCHAR(100),
	INJURY_MUNI VARCHAR(40),
	INJURY_COUNTY VARCHAR(60),
	INJURY_STATE VARCHAR(40),
	INJURY_STATEID int,
	INJURY_ZIP VARCHAR(9),
	INJURY_ZIPID int,
	INJURY_AT_WORK VARCHAR(1),
	INJURY_HOW_OCCUR VARCHAR(240),
	INJURY_TRANSP VARCHAR(1),
	INJURY_TRANSPL VARCHAR(50),
	INJURY_VEHICLE VARCHAR(50),
	NCHS_AGE VARCHAR(3),
	NCHS_AGEUNIT VARCHAR(1),
	USERNAME VARCHAR(50),
	USERLOCATION VARCHAR(100),
	EMB_DATE DATETIME,
	CEM_NAME VARCHAR(50),
	CEM_MUN VARCHAR(50),
	CEM_STATE VARCHAR(50),
	CEM_STATEID int,
	COR_PHY_TITLE VARCHAR(40),
	COR_PHY_SIG VARCHAR(1),
	ATT_PHY_TITLE VARCHAR(40),
	ATT_PHY_SIG VARCHAR(1),
	REG_SIG VARCHAR(1),
	ORGAN_CONS VARCHAR(1),
	CONST_GRANTED VARCHAR(2),
	CORRECTIONROLL VARCHAR(15),
	CDECEDENTID VARCHAR(20),
	FAC_IN_CITY VARCHAR(1),
	PREG42 VARCHAR(2),
	PREG43 VARCHAR(2),
	CENSUS VARCHAR(6),
	QUERYFLAG VARCHAR(20),
	CSTATECERT VARCHAR(20),
	ITEMSQUERIED VARCHAR(10),
	OVS_SEND_STAT VARCHAR(50),
	OVS_RTN_STAT VARCHAR(50),
	OVS_TRANS_DATE DATETIME,
	OVS_VERIFY_DATE DATETIME,
	OVS_CASE_NUMB VARCHAR(20),
	OVS_NUM_TRIES int,
	OVS_WAS_VERIFIED_DATA VARCHAR(80),
	OVS_WAS_VERIFIED_FLAG VARCHAR(1),
	SSA_FLAG VARCHAR(1),
	SSA_DATE DATETIME,
	NCHS_FLAG VARCHAR(1),
	NCHS_DATE DATETIME,
	VAL_TABLE_IND VARCHAR(1),
	PLC_DEATH_CD VARCHAR(1),
	BIRTH_COUNTRYID int,
	DISP_CODE VARCHAR(1),
	OK_TO_PRINT VARCHAR(1),
	PRINT_NUMBER int,
	PRINT_REASON VARCHAR(150),
	BIRTH_MATCHED VARCHAR(1),
	CHART_X_FLG VARCHAR(1),
	CHART_X_DATE DATETIME,
	ALERT_COUNT int,
	MARITALID int,
	DEATH2ID int,
	USERLOCATION_COUNTY VARCHAR(50),
	DEATH3ID int,
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int,
	MODIFY_USER_NAME VARCHAR(51),
	DATE_CC_PRINTED DATETIME,
	CERT_DEGREE VARCHAR(30),
	FUNER_SIG int,
	ATT_PHY_SIGN VARCHAR(1),
	COR_PHY_SIGN VARCHAR(1),
	REG_SIGN VARCHAR(1),
	DEATH_OOS_SFN VARCHAR(12),
	SSN_MVR VARCHAR(1),
	CERT_EMAIL VARCHAR(50),
	EDUCATION_TEST VARCHAR(50),
	EVENT_NAME VARCHAR(20),
	FAC_CITY_NCHS VARCHAR(5)
);
GO


IF OBJECT_ID('[vital_records].DEATH050707', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH050707;
CREATE TABLE [vital_records].DEATH050707 (
	Col001 VARCHAR(8000),
	Col002 VARCHAR(8000),
	Col003 VARCHAR(8000),
	Col004 VARCHAR(8000),
	Col005 VARCHAR(8000),
	Col006 VARCHAR(8000),
	Col007 VARCHAR(8000)
);
GO


IF OBJECT_ID('[vital_records].DEATH2', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH2;
CREATE TABLE [vital_records].DEATH2 (
	DEATH2ID int NOT NULL,
	EVENT_YEAR int,
	INJURY_DATE_STRING VARCHAR(10),
	D_TO_P_PRINT_DATE DATETIME,
	D_TO_P_PRINTED VARCHAR(1),
	PAPER_ELECTRONIC VARCHAR(1),
	DECEDENT_FOUND VARCHAR(5),
	DOD_KNOWN VARCHAR(1),
	DOINJURY_KNOW VARCHAR(1),
	INJURY_DATE_KNOWN VARCHAR(1),
	INJURYPLACE VARCHAR(1),
	ACTIVITY_CODE VARCHAR(1),
	PEND_INVESTIGAT VARCHAR(1),
	RESID_ZIPID_X int,
	FAC_ZIPID_X int,
	DETHNICE VARCHAR(3),
	INJURY_PLACEID VARCHAR(2),
	INJURY_ACTIVITY VARCHAR(1),
	HOSPICE_YN VARCHAR(1),
	HOSPICE_PRG_CODE VARCHAR(8),
	HOSPICE_PRG VARCHAR(50),
	FH_ID VARCHAR(10),
	FH_EST_NUM VARCHAR(20),
	FH_COUNTYC_NV VARCHAR(4),
	FH_CITYC_NV VARCHAR(3),
	FH_COMPLETE VARCHAR(1),
	FH_COMPL_DATE DATETIME,
	FH_COMPL_USER VARCHAR(50),
	FH_COMMENT VARCHAR(250),
	FH_DIRECT_NAME VARCHAR(50),
	FD_USER_ID VARCHAR(10),
	FD_LICENSE VARCHAR(10),
	FH_TRADE_NAME VARCHAR(200),
	FAC_COUNTYC_NV VARCHAR(4),
	FAC_TWO_CNTYC_NV VARCHAR(2),
	FAC_CITYC_NV VARCHAR(3),
	FAC_COMPLETE VARCHAR(1),
	FAC_COMPL_DATE DATETIME,
	FAC_COMPL_USER VARCHAR(51),
	FAC_TRADE_NAME VARCHAR(200),
	DR_COMPLETE VARCHAR(1),
	DR_COMPL_DATE DATETIME,
	DR_COMPL_USER VARCHAR(51),
	COR_COMPLETE VARCHAR(1),
	COR_COMPL_DATE DATETIME,
	COR_COMPL_USER VARCHAR(51),
	CNTY_COMPLETE VARCHAR(1),
	CNTY_COMPL_DATE DATETIME,
	CNTY_COMPL_USER VARCHAR(51),
	ST_COMPLETE VARCHAR(1),
	ST_COMPL_DATE DATETIME,
	ST_COMPL_USER VARCHAR(51),
	REGISTRAR_NAME VARCHAR(50),
	REGISTRAR_ID VARCHAR(5),
	REGISTRAR_SIGN int,
	PHY_ASSIGN VARCHAR(50),
	PHY_FILTER_LOC VARCHAR(3),
	PHY_LOCATION VARCHAR(100),
	PHY_LOC_CODE VARCHAR(8),
	PHY_COUNTY VARCHAR(30),
	TYPE_CERTIFIER VARCHAR(20),
	DEATHNIC5C VARCHAR(3),
	TRADE_CALL VARCHAR(200),
	TRADE_CALL_ID VARCHAR(10),
	TRADE_CALL_TRADE_NAME VARCHAR(200),
	TRADE_ADDRESS VARCHAR(50),
	TRADE_CITY VARCHAR(50),
	TRADE_STATE VARCHAR(50),
	TRADE_ZIP VARCHAR(10),
	TRADE_LICENSE VARCHAR(20),
	TRADE_PHONE VARCHAR(14),
	TRADE_YN VARCHAR(1),
	RESID_COUNTYC_NV VARCHAR(4),
	RESID_TWO_CNTYC_NV VARCHAR(2),
	RESID_CITYC_NV VARCHAR(3),
	RESID_STC_NV VARCHAR(2),
	CERT_TYPE_CODE VARCHAR(1),
	UC_QUERY VARCHAR(1),
	ARMY_YESNO VARCHAR(1),
	ARMED_FORCES_BEG DATETIME,
	ARMED_FORCES_END DATETIME,
	ARMEDF_BEG_STRING VARCHAR(10),
	ARMEDF_END_STRING VARCHAR(10),
	RACE1E VARCHAR(3),
	RACE2E VARCHAR(3),
	RACE3E VARCHAR(3),
	RACE4E VARCHAR(3),
	RACE5E VARCHAR(3),
	RACE6E VARCHAR(3),
	RACE7E VARCHAR(3),
	RACE8E VARCHAR(3),
	RACE16C VARCHAR(3),
	RACE17C VARCHAR(3),
	RACE18C VARCHAR(3),
	RACE19C VARCHAR(3),
	RACE20C VARCHAR(3),
	RACE21C VARCHAR(3),
	RACE22C VARCHAR(3),
	RACE23C VARCHAR(3),
	RACEBRG VARCHAR(2),
	SMICAR_SHIPMENT_NUMBER VARCHAR(3),
	SMICAR_RECEIPT_DATE DATETIME,
	SMICAR_ICD10 VARCHAR(5),
	SMICAR_AXIS_1 VARCHAR(8),
	SMICAR_AXIS_2 VARCHAR(8),
	SMICAR_AXIS_3 VARCHAR(8),
	SMICAR_AXIS_4 VARCHAR(8),
	SMICAR_AXIS_5 VARCHAR(8),
	SMICAR_AXIS_6 VARCHAR(8),
	SMICAR_AXIS_7 VARCHAR(8),
	SMICAR_AXIS_8 VARCHAR(8),
	SMICAR_AXIS_9 VARCHAR(8),
	SMICAR_AXIS_10 VARCHAR(8),
	SMICAR_AXIS_11 VARCHAR(8),
	SMICAR_AXIS_12 VARCHAR(8),
	SMICAR_AXIS_13 VARCHAR(8),
	SMICAR_AXIS_14 VARCHAR(8),
	SMICAR_AXIS_15 VARCHAR(8),
	SMICAR_AXIS_16 VARCHAR(8),
	SMICAR_AXIS_17 VARCHAR(8),
	SMICAR_AXIS_18 VARCHAR(8),
	SMICAR_AXIS_19 VARCHAR(8),
	SMICAR_AXIS_20 VARCHAR(8),
	ACME1 VARCHAR(8),
	ACME2 VARCHAR(8),
	ACME3 VARCHAR(8),
	ACME4 VARCHAR(8),
	ACME5 VARCHAR(8),
	ACME6 VARCHAR(8),
	ACME7 VARCHAR(8),
	ACME8 VARCHAR(8),
	ACME9 VARCHAR(8),
	ACME10 VARCHAR(8),
	ACME11 VARCHAR(8),
	ACME12 VARCHAR(8),
	ACME13 VARCHAR(8),
	ACME14 VARCHAR(8),
	ACME15 VARCHAR(8),
	ACME16 VARCHAR(8),
	ACME17 VARCHAR(8),
	ACME18 VARCHAR(8),
	ACME19 VARCHAR(8),
	ACME20 VARCHAR(8),
	LS1 VARCHAR(5),
	LS2 VARCHAR(5),
	LS3 VARCHAR(5),
	LS4 VARCHAR(5),
	LS5 VARCHAR(5),
	LS6 VARCHAR(5),
	LS7 VARCHAR(5),
	LS8 VARCHAR(5),
	LS9 VARCHAR(5),
	LS10 VARCHAR(5),
	LS11 VARCHAR(5),
	LS12 VARCHAR(5),
	LS13 VARCHAR(5),
	LS14 VARCHAR(5),
	LS15 VARCHAR(5),
	LS16 VARCHAR(5),
	LS17 VARCHAR(5),
	LS18 VARCHAR(5),
	LS19 VARCHAR(5),
	LS20 VARCHAR(5),
	NOSO_COMPLETE VARCHAR(1),
	NOSO_COMPL_DATE DATETIME,
	NOSO_USER VARCHAR(51),
	GEO_LAT VARCHAR(10),
	GEO_LONG VARCHAR(10),
	RECORD_TYPE VARCHAR(1),
	SOURCE VARCHAR(2),
	MANUAL_UNDERLYING_CODE VARCHAR(5),
	ACME_UNDERLYING_CODE VARCHAR(5),
	TRANSAX_CONVERSION VARCHAR(1),
	TRANSAX_IMPORTED_YN VARCHAR(1),
	ELECTION_READY_FLAG VARCHAR(1),
	ELECTION_READY_DATE DATETIME,
	STATE_SENT VARCHAR(1),
	STATE_SENT_DATE DATETIME,
	INTJ_SENT VARCHAR(1),
	INTJ_SENT_DATE DATETIME,
	MCRF_SENT VARCHAR(1),
	MCRF_SENT_DATE DATETIME,
	GEO_SENT VARCHAR(1),
	GEO_SENT_DATE DATETIME,
	DELAYED_INFO_1 VARCHAR(80),
	DELAYED_INFO_2 VARCHAR(80),
	NOTES VARCHAR(250),
	SENT_SUPER VARCHAR(1),
	DATE_SENT_SUPER DATETIME,
	PLACETYPE_MICAR VARCHAR(1),
	SUPERMICAR_FLAG VARCHAR(1),
	SUPERMICAR_RESEND VARCHAR(1),
	SUPERMICAR_RESEND_DATE DATETIME,
	SUPERMICAR_SENT VARCHAR(1),
	SUPERMICAR_SENT_DATE DATETIME,
	ICD10 VARCHAR(5),
	RESEND_YN VARCHAR(1),
	RESEND_DATE DATETIME,
	SHIPMENT_NUMB VARCHAR(20),
	VERIFIED_YN VARCHAR(1),
	VERIF_USERID VARCHAR(20),
	VERIF_DATE DATETIME,
	OCCODE_COMPLETE VARCHAR(1),
	OCCODE_COMP_DATE DATETIME,
	OCCODE_USER VARCHAR(51),
	REJECT_QUEUE VARCHAR(1),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int,
	MODIFY_USER VARCHAR(51),
	RAP_RPT_SENT VARCHAR(1),
	RAP_RPT_SENT_DATE DATETIME,
	CANCER_SENT VARCHAR(1),
	CANCER_SENT_DATE DATETIME,
	RARE_FLAG VARCHAR(1),
	RARE_DATE DATETIME,
	UNLIKE_FLAG VARCHAR(1),
	UNLIKEDATE DATETIME
);
GO


IF OBJECT_ID('[vital_records].DEATH3', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH3;
CREATE TABLE [vital_records].DEATH3 (
	DEATH3ID int NOT NULL,
	EVENT_YEAR int,
	CREATE_DATE DATETIME,
	USER_LOCATION VARCHAR(10),
	CASE_FILE_NUMBER VARCHAR(11),
	NAME_LFMS VARCHAR(36),
	RECORD_STATUS_PERS VARCHAR(51),
	RECORD_STATUS_MED VARCHAR(51),
	CERT_PHONE VARCHAR(10),
	CERT_EXTENSION VARCHAR(5),
	CERT_EMAIL VARCHAR(60),
	CERT_FAX VARCHAR(10),
	CERT_PREF_CONTACT VARCHAR(5),
	FUN_PHONE VARCHAR(14),
	FUN_EXTENSION VARCHAR(5),
	FUN_EMAIL VARCHAR(60),
	FUN_FAX VARCHAR(10),
	FUN_PREF_CONTACT VARCHAR(5),
	FUN_CONTACT_NAME VARCHAR(50),
	COR_TOD_KNOWN VARCHAR(1),
	COR_PRODOD_KNWN VARCHAR(1),
	COR_PROTOD_KNWN VARCHAR(1),
	CORONER_CASE_NUM VARCHAR(10),
	TOD_KNOWN VARCHAR(1),
	ATTENDING_NAME VARCHAR(50),
	ATTENDING_TITLE VARCHAR(20),
	AMENDMT_YN VARCHAR(1),
	AMENDMT_TOTAL VARCHAR(2),
	ALIAS_YN VARCHAR(1),
	RESID_COUNTRYC_NV VARCHAR(2),
	DEATH_CODE_NV VARCHAR(5),
	CERTIFICATE_ON_TIME VARCHAR(1),
	CERTIFICATE_SATIFACTORY VARCHAR(1),
	DEATH_STATE_CODE VARCHAR(2),
	BIRTH_STATE_CODE VARCHAR(2),
	FAC_INST_CODE VARCHAR(10),
	FAC_NV_CODE VARCHAR(4),
	MARITAL_CODE VARCHAR(1),
	MARITAL_CODE_ALPHA VARCHAR(1),
	FORM_CONTROL_NUMBER VARCHAR(6),
	CEM_ADDRESS VARCHAR(50),
	CEM_ZIP VARCHAR(9),
	CEM_PHONE VARCHAR(14),
	CEM_COUNTRY VARCHAR(20),
	COMM_DISEASE_CERT VARCHAR(1),
	BURIAL_OK_CERT VARCHAR(1),
	BURIAL_OK_DATE DATETIME,
	BURIAL_OK_BY VARCHAR(51),
	BURIAL_OK_USER VARCHAR(51),
	DISP_OK VARCHAR(1),
	INFORM_INFO_VERIFIED VARCHAR(1),
	PERMIT_PRINT_NUM VARCHAR(1),
	PERMIT_PRINT_DATE DATETIME,
	IMPORTED_YN VARCHAR(1),
	REGIS_ST_CNTY VARCHAR(12),
	MEDICAL_RECORD_NUM VARCHAR(15),
	CASE_STARTED_BY VARCHAR(50),
	REJECT_YN VARCHAR(1),
	REJECT_FR_TO VARCHAR(50),
	REJECTED_DATE VARCHAR(50),
	REJECTED_BY VARCHAR(50),
	REJECTED_TO_NAME VARCHAR(50),
	REJECTED_FR_CODE VARCHAR(1),
	REJECTED_TO_CODE VARCHAR(1),
	REJECTED_TO_NAME1 VARCHAR(50),
	REJECTED_REASON_CODE VARCHAR(3),
	REJECTED_REASON VARCHAR(50),
	REJECTED_COMMENTS VARCHAR(100),
	CO_JUDGE VARCHAR(50),
	CO_JUDGE_CNTY VARCHAR(50),
	CO_CASE_NUMBER VARCHAR(12),
	CO_FILE_DT_STR VARCHAR(10),
	CO_FILE_DATE DATETIME,
	RACE_NCHS VARCHAR(1),
	RACE_WHITE VARCHAR(1),
	RACE_BLACK VARCHAR(1),
	RACE_AM_INDIAN VARCHAR(1),
	RACE_ASIAN VARCHAR(1),
	RACE_CHINESE VARCHAR(1),
	RACE_FILIPINO VARCHAR(1),
	RACE_JAPANESE VARCHAR(1),
	RACE_KOREAN VARCHAR(1),
	RACE_VIETNAMESE VARCHAR(1),
	RACE_OTH_ASIAN VARCHAR(1),
	RACE_HAWAIIAN VARCHAR(1),
	RACE_GUAM VARCHAR(1),
	RACE_SAMOAN VARCHAR(1),
	RACE_OTH_PAC_ISL VARCHAR(1),
	RACE_OTHER VARCHAR(1),
	RACE_AM_IND_LIT VARCHAR(50),
	RACE_AM_IND_LIT2 VARCHAR(50),
	RACE_OTH_ASIAN_LIT VARCHAR(50),
	RACE_OTH_ASIAN_LIT2 VARCHAR(50),
	RACE_OTH_PAC_ISL_LIT VARCHAR(50),
	RACE_OTH_PAC_ISL_LIT2 VARCHAR(50),
	RACE_OTHER_LIT VARCHAR(50),
	RACE_OTHER_LIT2 VARCHAR(50),
	RACE_MVR VARCHAR(1),
	RACE_UNKNOWN VARCHAR(1),
	RACE_UNKNOWN_MVR VARCHAR(1),
	ETHNIC_YESNO VARCHAR(1),
	ETHNIC_MEXICAN VARCHAR(1),
	ETHNIC_PR VARCHAR(1),
	ETHNIC_CUBAN VARCHAR(1),
	ETHNIC_OTHER VARCHAR(1),
	ETHNIC_OTHER_LIT VARCHAR(50),
	ANCESTORY_NCHS VARCHAR(2),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int,
	MODIFY_USER_NAME VARCHAR(50),
	BURIAL_PERMIT_RECVD VARCHAR(1),
	ALERT_1 VARCHAR(50),
	ALERT_2 VARCHAR(50),
	ALERT_3 VARCHAR(50),
	OOS_DEATH_STATE VARCHAR(10),
	RESEND_NCHS_YN VARCHAR(1),
	RESEND_NCHS_DATE DATETIME,
	HOFFICER_NAME VARCHAR(50),
	HOFFICER_DATE DATETIME,
	HOFFICER_YN VARCHAR(2),
	HOFFICER_NOTES VARCHAR(255),
	INTRAINING VARCHAR(1),
	LAST_STATUS VARCHAR(30),
	UD_AXIS1 VARCHAR(10),
	UD_AXIS2 VARCHAR(10),
	ATTENDING_ID VARCHAR(10),
	FUN_CONTACT_ID VARCHAR(20),
	CO_AMEND_NBR VARCHAR(12),
	UD_AXIS3 VARCHAR(10),
	UD_AXIS4 VARCHAR(10),
	UD_AXIS5 VARCHAR(10),
	UD_AXIS6 VARCHAR(10),
	UD_AXIS7 VARCHAR(10),
	UD_AXIS8 VARCHAR(10),
	UD_AXIS9 VARCHAR(10),
	UD_AXIS10 VARCHAR(10),
	UD_AXIS11 VARCHAR(10),
	UD_AXIS12 VARCHAR(10),
	UD_AXIS13 VARCHAR(10),
	UD_AXIS14 VARCHAR(10),
	UD_AXIS15 VARCHAR(10),
	UD_AXIS16 VARCHAR(10),
	UD_AXIS17 VARCHAR(10),
	UD_AXIS18 VARCHAR(10),
	UD_AXIS19 VARCHAR(10),
	UD_AXIS20 VARCHAR(10),
	RES_LATITUDE VARCHAR(50),
	RES_LONGITUDE VARCHAR(50),
	GEO_OUT_CENSUS VARCHAR(100),
	GEO_OUT_COUNTY_FIPS VARCHAR(50),
	GEO_OUT_SCORE VARCHAR(100),
	GEO_OUT_MSA VARCHAR(50),
	GEO_OUT_FULL VARCHAR(50),
	GEO_OUT_ERROR VARCHAR(255),
	FAC_LATITUDE VARCHAR(50),
	FAC_LONGITUDE VARCHAR(50),
	FAC_GEO_OUT_CENSUS VARCHAR(50),
	FAC_GEO_OUT_COUNTY_FIPS VARCHAR(50),
	FAC_GEO_OUT_SCORE VARCHAR(50),
	FAC_GEO_OUT_MSA VARCHAR(50),
	FAC_GEO_OUT_FULL VARCHAR(50),
	FAC_GEO_OUT_ERROR VARCHAR(255),
	AGE_YR_PRINT VARCHAR(3),
	AGE_MON_PRINT VARCHAR(2),
	AGE_DAY_PRINT VARCHAR(2),
	AGE_HR_PRINT VARCHAR(2),
	AGE_MIN_PRINT VARCHAR(2),
	RACE_NOT_OBTAINABLE VARCHAR(1),
	RACE_REFUSED VARCHAR(1),
	RES_COUNTRY_FIPS VARCHAR(2),
	RES_STATE_FIPS VARCHAR(2),
	RES_COUNTY_FIPS VARCHAR(3),
	RES_CITY_FIPS VARCHAR(5),
	INJURY_COUNTRY_FIPS VARCHAR(2),
	INJURY_STATE_FIPS VARCHAR(2),
	INJURY_COUNTY_FIPS VARCHAR(3),
	INJURY_CITY_FIPS VARCHAR(5),
	BIRTH_COUNTRY_FIPS VARCHAR(2),
	BIRTH_STATE_FIPS VARCHAR(2),
	BIRTH_COUNTY_FIPS VARCHAR(3),
	BIRTH_CITY_FIPS VARCHAR(5),
	DEATH_COUNTRY_FIPS VARCHAR(2),
	DEATH_STATE_FIPS VARCHAR(2),
	DEATH_COUNTY_FIPS VARCHAR(3),
	DEATH_CITY_FIPS VARCHAR(5),
	SOS_SENT VARCHAR(1),
	SOS_SENT_DATE DATETIME,
	DMV_SENT VARCHAR(1),
	DMV_SENT_DATE DATETIME,
	INFANT_DOB_YR int,
	ALIAS_CODE_NV VARCHAR(1),
	REG_CODE_NV VARCHAR(1),
	AGE_WK_PRINT VARCHAR(2),
	BP_REG_OK_SIGN VARCHAR(1),
	BP_REG_OK_SIG int,
	BP_REG_NAME VARCHAR(30),
	BP_REG_DATE DATETIME,
	BP_REG_BY VARCHAR(30),
	BP_REG_ID int,
	RACE_NCHSHISP VARCHAR(3),
	BP_OK_BY_FML VARCHAR(50)
);
GO


IF OBJECT_ID('[vital_records].DEATH_ALERT', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_ALERT;
CREATE TABLE [vital_records].DEATH_ALERT (
	DEATH_ALERTID int,
	ALERT_DESC VARCHAR(150),
	ISACTIVE VARCHAR(50),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int
);
GO


IF OBJECT_ID('[vital_records].DEATH_CERT_NUM', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_CERT_NUM;
CREATE TABLE [vital_records].DEATH_CERT_NUM (
	DEATH_CERT_NUMID int,
	ITEM VARCHAR(15),
	ITEM_DESC VARCHAR(150),
	FIELD_NAME VARCHAR(255),
	EVENT VARCHAR(10),
	ISACTIVE VARCHAR(50),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int
);
GO


IF OBJECT_ID('[vital_records].DEATH_CORONER', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_CORONER;
CREATE TABLE [vital_records].DEATH_CORONER (
	DEATH_CORONERID int NOT NULL,
	CORONER_REASON VARCHAR(50),
	CORONER_CODE VARCHAR(4),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int
);
GO


IF OBJECT_ID('[vital_records].DEATH_HPC', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_HPC;
CREATE TABLE [vital_records].DEATH_HPC (
	DEATH_HPCID int,
	HPC_CODE VARCHAR(10),
	NV_CODE_PRE VARCHAR(3),
	NV_CODE_FAC_OLD VARCHAR(4),
	HPC_NAME VARCHAR(100),
	AKA VARCHAR(100),
	ADDRESS1 VARCHAR(50),
	ADDRESS2 VARCHAR(50),
	CITY VARCHAR(50),
	COUNTY VARCHAR(50),
	NV_COUNTY_CODE VARCHAR(3),
	STATE VARCHAR(2),
	ZIP VARCHAR(10),
	HPC_NCHS_CODE VARCHAR(10),
	HPC_TYPE_NAME VARCHAR(50),
	HPC_PAPER_ELEC VARCHAR(1),
	HPC_LICENSE VARCHAR(15),
	NAME_FML VARCHAR(50),
	NAME_LFM VARCHAR(50),
	NAME_FIRST VARCHAR(25),
	NAME_MIDDLE VARCHAR(25),
	NAME_LAST VARCHAR(25),
	NAME_SUFFIX VARCHAR(4),
	SALUTATION VARCHAR(6),
	DEGREE VARCHAR(10),
	PHONE VARCHAR(10),
	PHONE_EXTENSION VARCHAR(5),
	EMAIL VARCHAR(50),
	FAX VARCHAR(10),
	PREFERRED_METHOD VARCHAR(10),
	YEAR_VOIDED int,
	BIRTH_FAC VARCHAR(4),
	DEATH_FAC VARCHAR(4),
	ACOS_NUMBER VARCHAR(10),
	FIPS_STATE VARCHAR(2),
	FIPS_COUNTY VARCHAR(3),
	FIPS_CITY VARCHAR(5),
	FIPS_CLASS_CODE VARCHAR(2),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int
);
GO


IF OBJECT_ID('[vital_records].DEATH_INFORM', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_INFORM;
CREATE TABLE [vital_records].DEATH_INFORM (
	DEATH_INFORMID int,
	DTH_INFORM_DESC VARCHAR(50),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int,
	ISACTIVE VARCHAR(1),
	EVENT_FILTER VARCHAR(10)
);
GO


IF OBJECT_ID('[vital_records].DEATH_INJURY_PLACE', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_INJURY_PLACE;
CREATE TABLE [vital_records].DEATH_INJURY_PLACE (
	DEATH_INJURY_PLACEID int NOT NULL,
	PLACETYPE_CODE VARCHAR(5),
	PLACETYPE_NAME VARCHAR(30),
	ISACTIVE VARCHAR(1),
	MODIFY_USERID int,
	MODIFY_DATE DATETIME,
	NV_CODES VARCHAR(2),
	SUPERMICAR_CODE VARCHAR(1)
);
GO


IF OBJECT_ID('[vital_records].DEATH_MARITAL', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_MARITAL;
CREATE TABLE [vital_records].DEATH_MARITAL (
	MARITALDTHID int,
	MARITAL_CODE VARCHAR(1),
	MARITAL_DESC VARCHAR(25),
	MODIFY_DATE DATETIME,
	ISACTIVE VARCHAR(1),
	MODIFY_USERID int,
	IMPORT_CODE VARCHAR(1)
);
GO


IF OBJECT_ID('[vital_records].DEATH_PLACE', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_PLACE;
CREATE TABLE [vital_records].DEATH_PLACE (
	DEATH_PLACEID int NOT NULL,
	PLACE_OF_DEATH VARCHAR(40),
	NV_CODES VARCHAR(1),
	PLACE_OF_DEATH_CODE VARCHAR(1),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int,
	PRIME_INPUT VARCHAR(1)
);
GO


IF OBJECT_ID('[vital_records].DEATH_REJECT', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_REJECT;
CREATE TABLE [vital_records].DEATH_REJECT (
	DEATH_REJECTID VARCHAR(2) NOT NULL,
	REJECT_REASON_CODE VARCHAR(8),
	REJECT_ORIGINATOR VARCHAR(8),
	REJECT_REASON_DESC VARCHAR(50),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int
);
GO


IF OBJECT_ID('[vital_records].DEATH_REJECT_TYPE', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_REJECT_TYPE;
CREATE TABLE [vital_records].DEATH_REJECT_TYPE (
	DEATH_REJECT_TYPEID VARCHAR(2) NOT NULL,
	REJECT_ORIGINATOR VARCHAR(8),
	REJECT_ASSIGN_TYPE VARCHAR(5),
	REJECT_REASON_CODE VARCHAR(8),
	REJECT_REASON_DESC VARCHAR(50),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int
);
GO


IF OBJECT_ID('[vital_records].DEATH_STATUS', 'U') IS NOT NULL
	DROP TABLE [vital_records].DEATH_STATUS;
CREATE TABLE [vital_records].DEATH_STATUS (
	DEATH_STATUSID int,
	DEA_STATUS_DESC VARCHAR(25),
	DEA_STATUS_SECT VARCHAR(10),
	ISACTIVE VARCHAR(1),
	MODIFY_DATE DATETIME,
	MODIFY_USERID int
);
GO

